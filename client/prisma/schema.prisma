// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  Student
  Parent
  Teacher
  School
}

type Quiz {
  subject String?
  mark    String?
  date    String?
}

type Absent {
  date    String?
  teacher String?
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  password String    @unique
  ID       String    @unique
  role     Role
  schoolId String?   @db.ObjectId
  school   School?   @relation(fields: [schoolId], references: [id])
  Class    Class?    @relation(fields: [classId], references: [id])
  classId  String?   @db.ObjectId
  warnings Warning[]
  Utility  Json
}

model Warning {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  student     User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
}

model School {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String  @unique
  contactNo String
  ID        String
  password  String
  users     User[]
  news      New[]
  classes   Class[]
}

model New {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  date        String
  grade       String
  schoolId    String? @db.ObjectId
  school      School? @relation(fields: [schoolId], references: [id])
}

model Table {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  subject   String
  day       String
  beginning String
  end       String
  peroid    String
  Class     Class?  @relation(fields: [classId], references: [id])
  classId   String? @db.ObjectId
}

model Class {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  totalStudents Int?
  students      User[]
  timeTable     Table[]
  grade         String
  School        School? @relation(fields: [schoolId], references: [id])
  schoolId      String? @db.ObjectId
}
